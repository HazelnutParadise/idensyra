// Code generated by 'yaegi extract github.com/HazelnutParadise/insyra/stats'. DO NOT EDIT.

package idensyra

import (
	"github.com/HazelnutParadise/insyra/stats"
	"reflect"
)

func init() {
	Symbols["github.com/HazelnutParadise/insyra/stats/stats"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CalculateMoment":                  reflect.ValueOf(stats.CalculateMoment),
		"ChiSquareTest":                    reflect.ValueOf(stats.ChiSquareTest),
		"Correlation":                      reflect.ValueOf(stats.Correlation),
		"Covariance":                       reflect.ValueOf(stats.Covariance),
		"FTestForVarianceEquality":         reflect.ValueOf(stats.FTestForVarianceEquality),
		"KendallCorrelation":               reflect.ValueOf(stats.KendallCorrelation),
		"Kurtosis":                         reflect.ValueOf(stats.Kurtosis),
		"LinearRegression":                 reflect.ValueOf(stats.LinearRegression),
		"OneWayANOVA_WideFormat":           reflect.ValueOf(stats.OneWayANOVA_WideFormat),
		"PCA":                              reflect.ValueOf(stats.PCA),
		"PairedTTest":                      reflect.ValueOf(stats.PairedTTest),
		"PearsonCorrelation":               reflect.ValueOf(stats.PearsonCorrelation),
		"RepeatedMeasuresANOVA_WideFormat": reflect.ValueOf(stats.RepeatedMeasuresANOVA_WideFormat),
		"SingleSampleTTest":                reflect.ValueOf(stats.SingleSampleTTest),
		"Skewness":                         reflect.ValueOf(stats.Skewness),
		"SpearmanCorrelation":              reflect.ValueOf(stats.SpearmanCorrelation),
		"TwoSampleTTest":                   reflect.ValueOf(stats.TwoSampleTTest),
		"TwoWayANOVA_WideFormat":           reflect.ValueOf(stats.TwoWayANOVA_WideFormat),

		// type definitions
		"ChiSquareTestResult":         reflect.ValueOf((*stats.ChiSquareTestResult)(nil)),
		"CorrelationMethod":           reflect.ValueOf((*stats.CorrelationMethod)(nil)),
		"FTestResult":                 reflect.ValueOf((*stats.FTestResult)(nil)),
		"LinearRegressionResult":      reflect.ValueOf((*stats.LinearRegressionResult)(nil)),
		"OneWayANOVAResult":           reflect.ValueOf((*stats.OneWayANOVAResult)(nil)),
		"PCAResult":                   reflect.ValueOf((*stats.PCAResult)(nil)),
		"RepeatedMeasuresANOVAResult": reflect.ValueOf((*stats.RepeatedMeasuresANOVAResult)(nil)),
		"TTestResult":                 reflect.ValueOf((*stats.TTestResult)(nil)),
		"TwoWayANOVAResult":           reflect.ValueOf((*stats.TwoWayANOVAResult)(nil)),
	}
}
