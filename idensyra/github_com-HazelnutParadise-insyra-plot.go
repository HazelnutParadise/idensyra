// Code generated by 'yaegi extract github.com/HazelnutParadise/insyra/plot'. DO NOT EDIT.

package idensyra

import (
	"github.com/HazelnutParadise/insyra/plot"
	"io"
	"reflect"
)

func init() {
	Symbols["github.com/HazelnutParadise/insyra/plot/plot"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CreateBarChart":         reflect.ValueOf(plot.CreateBarChart),
		"CreateBoxPlot":          reflect.ValueOf(plot.CreateBoxPlot),
		"CreateFunnelChart":      reflect.ValueOf(plot.CreateFunnelChart),
		"CreateGaugeChart":       reflect.ValueOf(plot.CreateGaugeChart),
		"CreateHeatmapChart":     reflect.ValueOf(plot.CreateHeatmapChart),
		"CreateKlineChart":       reflect.ValueOf(plot.CreateKlineChart),
		"CreateLineChart":        reflect.ValueOf(plot.CreateLineChart),
		"CreateLiquidChart":      reflect.ValueOf(plot.CreateLiquidChart),
		"CreatePieChart":         reflect.ValueOf(plot.CreatePieChart),
		"CreateRadarChart":       reflect.ValueOf(plot.CreateRadarChart),
		"CreateSankeyChart":      reflect.ValueOf(plot.CreateSankeyChart),
		"CreateScatterChart":     reflect.ValueOf(plot.CreateScatterChart),
		"CreateThemeRiverChart":  reflect.ValueOf(plot.CreateThemeRiverChart),
		"CreateWordCloud":        reflect.ValueOf(plot.CreateWordCloud),
		"LoadSankeyDataFromFile": reflect.ValueOf(plot.LoadSankeyDataFromFile),
		"SaveHTML":               reflect.ValueOf(plot.SaveHTML),
		"SavePNG":                reflect.ValueOf(plot.SavePNG),

		// type definitions
		"BarChartConfig":        reflect.ValueOf((*plot.BarChartConfig)(nil)),
		"BoxPlotConfig":         reflect.ValueOf((*plot.BoxPlotConfig)(nil)),
		"FunnelChartConfig":     reflect.ValueOf((*plot.FunnelChartConfig)(nil)),
		"GaugeChartConfig":      reflect.ValueOf((*plot.GaugeChartConfig)(nil)),
		"HeatmapChartConfig":    reflect.ValueOf((*plot.HeatmapChartConfig)(nil)),
		"KlineChartConfig":      reflect.ValueOf((*plot.KlineChartConfig)(nil)),
		"LineChartConfig":       reflect.ValueOf((*plot.LineChartConfig)(nil)),
		"LiquidChartConfig":     reflect.ValueOf((*plot.LiquidChartConfig)(nil)),
		"PieChartConfig":        reflect.ValueOf((*plot.PieChartConfig)(nil)),
		"RadarChartConfig":      reflect.ValueOf((*plot.RadarChartConfig)(nil)),
		"Renderable":            reflect.ValueOf((*plot.Renderable)(nil)),
		"SankeyChartConfig":     reflect.ValueOf((*plot.SankeyChartConfig)(nil)),
		"SankeyLink":            reflect.ValueOf((*plot.SankeyLink)(nil)),
		"ScatterChartConfig":    reflect.ValueOf((*plot.ScatterChartConfig)(nil)),
		"ThemeRiverChartConfig": reflect.ValueOf((*plot.ThemeRiverChartConfig)(nil)),
		"ThemeRiverData":        reflect.ValueOf((*plot.ThemeRiverData)(nil)),
		"WordCloudConfig":       reflect.ValueOf((*plot.WordCloudConfig)(nil)),

		// interface wrapper definitions
		"_Renderable": reflect.ValueOf((*_github_com_HazelnutParadise_insyra_plot_Renderable)(nil)),
	}
}

// _github_com_HazelnutParadise_insyra_plot_Renderable is an interface wrapper for Renderable type
type _github_com_HazelnutParadise_insyra_plot_Renderable struct {
	IValue  interface{}
	WRender func(w io.Writer) error
}

func (W _github_com_HazelnutParadise_insyra_plot_Renderable) Render(w io.Writer) error {
	return W.WRender(w)
}
